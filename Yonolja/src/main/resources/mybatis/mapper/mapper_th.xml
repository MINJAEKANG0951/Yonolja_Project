<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.human.springboot.DAO_TH">
		<!-- 
	<select id="member_login" resultType="com.human.springboot.dto.TH_DTO">
		select kth_user_id, kth_user_seq from kth_member where 
	</select>
	--> 
	<!-- 회원목록관리 -->
	<select id="member_list" resultType="com.human.springboot.DTO_TH">
		SELECT USER_SEQ, USER_ID, USER_NAME, USER_MOBILE, USER_EMAIL, USER_GENDER, USER_TYPE, USER_SIGNINTYPE, NUM
			FROM (SELECT USER_SEQ, USER_ID, USER_NAME, USER_MOBILE, USER_EMAIL, USER_GENDER, USER_TYPE, USER_SIGNINTYPE, ROWNUM AS NUM
			FROM ( SELECT USER_SEQ, USER_ID, USER_NAME, USER_MOBILE, USER_EMAIL, USER_GENDER, USER_TYPE, USER_SIGNINTYPE
			FROM Yonolja_user WHERE not USER_ID= 'admin' ORDER BY USER_SEQ desc))
			WHERE NUM BETWEEN #{param1} AND #{param2}
	</select>
	<!--  -->
	<select id='member_count' resultType="int">
		select count(user_id) from Yonolja_user where not user_id='admin'
	</select>
	
	<!-- 회원 검색 -->
	<select id="admin_user_search" resultType='com.human.springboot.DTO_TH'>
		SELECT USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE, NUM
		FROM (SELECT USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE, ROWNUM AS NUM
		FROM ( select USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE 
				from yonolja_user where not user_id='admin' and (USER_ID like '%' || #{param1} || '%'
                  or  USER_NAME like '%' || #{param1} || '%' 
                  or  USER_MOBILE like '%' || #{param1} || '%' 
                  or USER_EMAIL like '%' || #{param1} || '%'
                  ) ORDER BY user_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3} 
	</select>
	<select id="admin_user_search_count" resultType='int'>
		select count(*)
				from yonolja_user where not user_id='admin' and (USER_ID like '%' || #{param1} || '%'
                  or  USER_NAME like '%' || #{param1} || '%' 
                  or  USER_MOBILE like '%' || #{param1} || '%' 
                  or USER_EMAIL like '%' || #{param1} || '%')
	
	</select>
	<select id="admin_user_search_name" resultType='com.human.springboot.DTO_TH'>
		SELECT USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE, NUM
		FROM (SELECT USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE, ROWNUM AS NUM
		FROM ( select USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE 
				from yonolja_user where not user_id='admin' and ( USER_NAME like '%' || #{param1} || '%' ) 
				ORDER BY user_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3} 
	</select>
	
	<select id="admin_user_search_name_count" resultType='int'>
		select count(*)
				from yonolja_user where not user_id='admin' and ( USER_NAME like '%' || #{param1} || '%' )
	
	</select>
	<select id="admin_user_search_id" resultType='com.human.springboot.DTO_TH'>
		SELECT USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE, NUM
		FROM (SELECT USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE, ROWNUM AS NUM
		FROM ( select USER_SEQ, USER_ID, USER_PASSWORD, USER_NAME, USER_MOBILE, USER_EMAIL,USER_GENDER,USER_TYPE,USER_SIGNINTYPE 
				from yonolja_user where not user_id='admin' and ( USER_ID like '%' || #{param1} || '%' ) 
				ORDER BY user_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3} 
	</select>
	
	<select id="admin_user_search_id_count" resultType='int'>
		select count(*)
				from yonolja_user where not user_id='admin' and ( USER_ID like '%' || #{param1} || '%' )
	
	</select>
	
	<!-- 나중에 타입별 보여주기
	 
	<select id='admin_user_type' resultType='com.human.springboot.DTO_TH'>
		select * from yonolja_user where user_type=#{param1}
	</select>
	 -->
	<!-- 회원게시판 관리 -->
	<select id='post_list' resultType="com.human.springboot.DTO_TH">

		 SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, NUM
		FROM (SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, ROWNUM AS NUM
		FROM ( select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment 
				from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and not b.user_id='admin' ORDER BY a.post_seq desc))
		WHERE NUM BETWEEN #{param1} AND #{param2}
	</select>
	<!-- 전체 게시판 숫자 -->
	<select id='post_count' resultType="int">
		select count(*) from Yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and not b.user_id='admin'
	</select>
	<!-- 다이얼로그 데이터 -->
	<select id='post_seq_data' resultType="com.human.springboot.DTO_TH">
		select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment,a.post_content 
		from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and a.post_seq=#{param1}
	</select>
	<!-- 회원게시판 검색 관리 통합-->
	<select id='post_list_search' resultType="com.human.springboot.DTO_TH">
		SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, NUM
		FROM (SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, ROWNUM AS NUM
		FROM ( select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment 
				from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and not b.user_id='admin'and (a.post_title like '%' || #{param1} || '%'
                  or  a.post_content like '%' || #{param1} || '%' 
                  or  b.user_id like '%' || #{param1} || '%' 
                  or a.post_comment like '%' || #{param1} || '%') ORDER BY a.post_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3}
	</select>
	
	<!--  검색된 게시글 숫자 -->
	<select id='post_list_search_count' resultType="int">
		select count(a.post_seq) from yonolja_post a, yonolja_user b where a.user_seq= b.user_seq and not b.user_id='admin' and (a.post_title like '%' || #{param1} || '%'
                  or  a.post_content like '%' || #{param1} || '%' 
                  or  b.user_id like '%' || #{param1} || '%')
	</select>
	<!-- 아이디 검색 -->
	<select id='post_list_search_id' resultType="com.human.springboot.DTO_TH">
		SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, NUM
		FROM (SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, ROWNUM AS NUM
		FROM ( select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment 
				from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and not b.user_id='admin'and 
				(b.user_id like '%' || #{param1} || '%' 
                 ) ORDER BY a.post_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3}
	</select>
		<!-- 검색한 아이디 게시글 숫자-->
	<select id='post_list_search_id_count' resultType="int">
		select count(a.post_seq) from yonolja_post a, yonolja_user b where a.user_seq= b.user_seq and not b.user_id='admin' and (
                b.user_id like '%' || #{parma1} || '%')
	</select>
		<!-- 제목 검색 -->
	<select id='post_list_search_title' resultType="com.human.springboot.DTO_TH">
		SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, NUM
		FROM (SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, ROWNUM AS NUM
		FROM ( select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment 
				from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and not b.user_id='admin'and 
				(a.post_title like '%' || #{param1} || '%' 
                 ) ORDER BY a.post_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3}
	</select>
		<!-- 검색한 제목 게시글 숫자-->
	<select id='post_list_search_title_count' resultType="int">
		select count(a.post_seq) from yonolja_post a, yonolja_user b where a.user_seq= b.user_seq and not b.user_id='admin' and (
                a.post_title like '%' || #{parma1} || '%')
	</select>
		<!-- 내용 검색 -->
	<select id='post_list_search_content' resultType="com.human.springboot.DTO_TH">
		SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, NUM
		FROM (SELECT post_seq, post_category, user_id, post_title, post_date, post_comment, ROWNUM AS NUM
		FROM ( select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment 
				from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and not b.user_id='admin'and 
				(a.post_content like '%' || #{param1} || '%' 
                 ) ORDER BY a.post_seq desc))
		WHERE NUM BETWEEN #{param2} AND #{param3}
	</select>
		<!-- 검색한 내용 게시글 숫자-->
	<select id='post_list_search_content_count' resultType="int">
		select count(a.post_seq) from yonolja_post a, yonolja_user b where a.user_seq= b.user_seq and not b.user_id='admin' and (
                a.post_content like '%' || #{parma1} || '%')
	</select>
	<!-- 답변 관리 -->
	<update id='post_admin_comment'>
		update yonolja_post set post_comment = #{param1} where post_seq=#{param2}
	</update>
	
	<select id="post_list_diolog" resultType="com.human.springboot.DTO_TH">
		select a.post_seq,a.POST_CATEGORY,b.user_id,a.post_title,a.post_date,a.post_comment,a.post_content,a.post_img
		from yonolja_post a, yonolja_user b where a.user_seq=b.user_seq and a.post_seq=#{param1}
	</select>
	
	<delete id="post_delete_list">
		delete from yonolja_post where post_seq=#{param1}
	</delete>
	<!-- 호텔 옵션타입관리 -->
	<select id='yonolja_place_type_list' resultType='com.human.springboot.DTO_TH'>
		select * from yonolja_place_type
	</select>
	<insert id="yonolja_place_type_add">
		insert into yonolja_place_type values(PLACE_TYPE_SEQ.nextval,#{param1},#{param2})
	</insert>
	<!-- 이미지 이름 전부 변경 -->
	<update id="yonolja_place_type_update_all">
		update yonolja_place_type set place_type_name=#{param2}, place_type_img=#{param3} where place_type_seq=#{param1}
	</update>
	<!-- 이름만 변경 -->
	<update id="yonolja_place_type_update_name">
		update yonolja_place_type set place_type_name=#{param2} where place_type_seq=#{param1}
	</update>
	<delete id="yonolja_place_type_delete">
		delete from yonolja_place_type where place_type_seq=#{param1}
	</delete>
	<!-- 호텔 편이시설 관리 -->
	<select id='yonolja_place_option_list' resultType='com.human.springboot.DTO_TH'>
		select * from yonolja_place_option
	</select>
	<insert id="yonolja_place_option_add">
		insert into yonolja_place_option values(PLACE_option_SEQ.nextval,#{param1},#{param2})
	</insert>
	<!-- 이미지 이름 전부 변경 -->
	<update id="yonolja_place_option_update_all">
		update yonolja_place_option set place_option_name=#{param2}, place_option_img=#{param3} where place_option_seq=#{param1}
	</update>
	<!-- 이름만 변경 -->
	<update id="yonolja_place_option_update_name">
		update yonolja_place_option set place_option_name=#{param2} where place_option_seq=#{param1}
	</update>
	<delete id="yonolja_place_option_delete">
		delete from yonolja_place_option where place_option_seq=#{param1}
	</delete>
	
	
	
	<select id="yonolja_review_list" resultType='com.human.springboot.DTO_TH'>
		select review_seq,place_seq,place_name, user_id, review_date, review_star,review_content, num from
			(select review_seq,place_seq,place_name, user_id, review_date, review_star,review_content, rownum as num from
				(select a.review_seq,e.place_seq,e.place_name, f.user_id, a.review_date, a.review_star,a.review_content
					from yonolja_review a, yonolja_book b, yonolja_room c, yonolja_roomtype d, yonolja_place e, yonolja_user f
						where a.book_seq=b.book_seq and
						b.room_seq=c.room_seq and
						c.roomtype_seq=d.roomtype_seq and 
						d.place_seq=e.place_seq and 
						b.user_seq=f.user_seq order by a.review_seq desc))
						where num between #{param1} and #{param2}
	</select>
	<!--  리뷰관리 페이징 -->
	<select id="yonolja_review_page" resultType="int">
		select count(*) from yonolja_review
	</select> 
	<!-- 나중에 변경해야됨 변경 내역은 테이블 명, 및 컬럼 명, bookseq는 다른 테이블과 조인이 필요 -->
	<select id="yonolja_review_search" resultType='com.human.springboot.DTO_TH'>
			select review_seq,place_seq,place_name, user_id, review_date, review_star,review_content, num from
			(select review_seq,place_seq,place_name, user_id, review_date, review_star,review_content, rownum as num from
				(select a.review_seq,e.place_seq,e.place_name, f.user_id, a.review_date, a.review_star,a.review_content
					from yonolja_review a, yonolja_book b, yonolja_room c, yonolja_roomtype d, yonolja_place e, yonolja_user f
						where a.book_seq=b.book_seq and
						b.room_seq=c.room_seq and
						c.roomtype_seq=d.roomtype_seq and 
						d.place_seq=e.place_seq and 
						b.user_seq=f.user_seq and 
						( e.place_name like '%' || #{param1} || '%' 
						or  f.user_id like '%' || #{param1} || '%' 
						or a.REVIEW_CONTENT like '%' || #{param1} || '%' 
	              		) order by a.review_seq desc))
						where num between #{param2} and #{param3}
	
	</select>
	<select id="yonolja_review_search_page" resultType="int">
		select count(*)
					from yonolja_review a, yonolja_book b, yonolja_room c, yonolja_roomtype d, yonolja_place e, yonolja_user f
						where a.book_seq=b.book_seq and
						b.room_seq=c.room_seq and
						c.roomtype_seq=d.roomtype_seq and 
						d.place_seq=e.place_seq and 
						b.user_seq=f.user_seq and 
						( e.place_name like '%' || #{param1} || '%' 
						or  f.user_id like '%' || #{param1} || '%' 
						or a.REVIEW_CONTENT like '%' || #{param1} || '%' )
	</select>
	<select id="yonolja_review_dig" resultType='com.human.springboot.DTO_TH'>
		select a.review_seq,e.place_name, f.user_id, a.review_date, a.review_star,a.review_content
			from yonolja_review a, yonolja_book b, yonolja_room c, yonolja_roomtype d, yonolja_place e, yonolja_user f
			where a.book_seq=b.book_seq and
			b.room_seq=c.room_seq and
			c.roomtype_seq=d.roomtype_seq and 
			d.place_seq=e.place_seq and 
			b.user_seq=f.user_seq and a.review_seq=#{param1}
	
	</select>
	
	<delete id="review_delete_list">
		delete from yonolja_review where review_seq=#{param1}
	</delete>
	
	<select id="getPlaceType" resultType='com.human.springboot.DTO_TH'>
		select * from yonolja_place_type where place_type_seq = #{param1}
	</select>
	
	<select id="getPlaceOption" resultType='com.human.springboot.DTO_TH'>
		select * from yonolja_place_option where place_option_seq= #{param1}
	</select>
</mapper>

