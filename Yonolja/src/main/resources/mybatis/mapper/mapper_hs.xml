<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.human.springboot.DAO_HS">	
	<!-- 마이페이지/업주 업장정보 페이지네이션 구현 -->
	<select id="host_imgs" resultType="com.human.springboot.DTO_HS_userDTO">
	<![CDATA[
	    select *
	    from (
	        select a.user_seq, a.user_id, b.place_imgs, b.place_seq, a.user_type, b.place_name,
	        ROW_NUMBER() OVER (ORDER BY b.place_seq) AS rnum
	    from yonolja_user a, yonolja_place b 
	    where a.user_seq = b.user_seq
	    and a.user_seq = #{param3}
	          ) where rnum BETWEEN #{param1} and #{param1} + #{param2} - 1
	
	    ]]>
	</select>
	<select id="img_count" resultType="java.lang.Integer">
	    <![CDATA[
	        SELECT COUNT(*) FROM yonolja_place WHERE user_seq = #{param1}
	    ]]>
	</select>
	
	<select id="user_all" resultType="com.human.springboot.DTO_HS_userDTO">
		SELECT user_seq, user_id, user_password, user_name, user_mobile, user_email, user_gender, user_type, user_signinType
		FROM yonolja_user
		WHERE user_seq = #{param1}
	</select>	
	
	<!-- 내정보관리 -->
	<update id="updateUserNolja">
		update yonolja_user set user_email=#{param2}, user_password=#{param3}, user_mobile=#{param4}
		where user_seq=#{param1}
	</update>
	
	<delete id="YonoljaBye">
		delete from yonolja_user where user_seq=#{param1}
	</delete>
	
	<!-- 나의문의 -->

	<select id="myPostlist" resultType="com.human.springboot.DTO_HS_postDTO">
			<![CDATA[
	    select *
	    from (
	        select b.post_seq, b.post_title, b.post_date, b.post_comment,
	        ROW_NUMBER() OVER (ORDER BY b.post_seq DESC) AS rnum
	    from yonolja_user a, yonolja_post b 
	    where a.user_seq = b.user_seq 
		  and b.user_seq = #{param1}
	          ) where rnum BETWEEN #{param2} and #{param2} + #{param3} - 1
	
	    ]]>
	</select>
		<select id="mypost_count" resultType="java.lang.Integer">
	        SELECT COUNT(*) 
	        FROM yonolja_post 
	        WHERE user_seq = #{param1}
	</select>
	
	<!-- 예약내역, 리뷰 등록 여부 체크 -->
	
<!-- 이용 전인 예약 목록을 가져오는 쿼리 -->
	<select id="waiting_book" resultType="com.human.springboot.DTO_HS_bookDTO">
		<![CDATA[
		    select *
		    from (
		    select a.book_seq, a.user_seq, a.room_seq, a.checkin_date, a.checkout_date, a.book_price, 
		    c.roomtype_name, d.place_name, d.place_seq,
		    (case when e.book_seq is null then '미등록' else '등록' end) as review_status,
		    (case 
		        when a.checkin_date > SYSDATE then '이용전'
		    end) as usage_status,
		        ROW_NUMBER() OVER (ORDER BY a.checkin_date, a.checkout_date DESC) AS rnum
		    from yonolja_book a 
			 LEFT JOIN yonolja_review e ON a.book_seq = e.book_seq
			INNER JOIN yonolja_room b ON a.room_seq = b.room_seq 
			INNER JOIN yonolja_roomtype c ON b.roomtype_seq = c.roomtype_seq
			INNER JOIN yonolja_place d ON c.place_seq = d.place_seq
		    where a.user_seq = #{param1} AND TO_DATE(a.checkin_date, 'yy.mm.dd') > TRUNC(SYSDATE)
		          ) where rnum BETWEEN #{param2} and #{param2} + #{param3} - 1
	
	    ]]>
	</select>

<!-- 이용 중 또는 이용 완료인 예약 목록을 가져오는 쿼리 -->
	<select id="con_book" resultType="com.human.springboot.DTO_HS_bookDTO">
		<![CDATA[
		    select *
		    from (
		        SELECT a.book_seq, a.user_seq, a.room_seq, a.checkin_date, a.checkout_date, a.book_price, 
		    c.roomtype_name, d.place_name,
		    (case when e.book_seq is null then '미등록' else '등록' end) as review_status,
		    (case 
		        when a.checkin_date <= SYSDATE AND a.checkout_date > SYSDATE then '이용가능'
		        when a.checkout_date <= SYSDATE then '이용완료'
		    end) as usage_status,
		        ROW_NUMBER() OVER (                
	            ORDER BY 	    
	                    CASE 
	                        WHEN a.checkin_date <= SYSDATE AND a.checkout_date > SYSDATE THEN 1
	                        WHEN a.checkout_date <= SYSDATE THEN 2
	                    END ASC,
	                    a.checkin_date DESC,
	                    a.checkout_date DESC
	                    ) AS rnum
		    from yonolja_book a 
			 LEFT JOIN yonolja_review e ON a.book_seq = e.book_seq
			INNER JOIN yonolja_room b ON a.room_seq = b.room_seq 
			INNER JOIN yonolja_roomtype c ON b.roomtype_seq = c.roomtype_seq
			INNER JOIN yonolja_place d ON c.place_seq = d.place_seq
			WHERE a.user_seq = #{param1} AND a.checkin_date <= SYSDATE
		          ) where rnum BETWEEN #{param2} and #{param2} + #{param3} - 1
		]]>
	</select>

	<select id="mybook_count" resultType="java.lang.Integer">
		select count(*)
		  from yonolja_book
		 where user_seq = #{param1}
	</select>
	
	<select id="waiting_count" resultType="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(*) 
		FROM yonolja_book a 
		WHERE a.user_seq = #{param1}
		AND a.checkin_date > SYSDATE
		]]>
	</select>

	<select id="con_count" resultType="java.lang.Integer">
		<![CDATA[
			SELECT SUM(count) AS count
			FROM (
			    SELECT COUNT(*) AS count
			    FROM yonolja_book a 
			    WHERE a.user_seq = #{param1}
			    AND a.checkin_date <= SYSDATE AND a.checkout_date > SYSDATE
			    UNION ALL
			    SELECT COUNT(*) AS count
			    FROM yonolja_book a 
			    WHERE a.user_seq = #{param1}
			    AND a.checkout_date <= SYSDATE
			) subquery
		]]>
	</select>	
	
	<!-- 예약내역에서 리뷰 등록하기 -->
 	<insert id="review_insert">
		insert into yonolja_review values(review_seq.nextval, #{param1}, sysdate, #{param2}, #{param3})
	</insert> 
	
	<!-- 예약내역에서 예약취소(삭제)하기-->
	<delete id="myBook_delete">
		delete from yonolja_book where book_seq = #{param1}
	</delete>
	
	<!-- 나의후기에서 리뷰 조회(출력)하기/페이지네이션 구현 -->
	
	<select id="myReviewlist" resultType="com.human.springboot.DTO_HS_reviewDTO">
	<![CDATA[
	    select *
	    from (
	        select a.review_seq, b.user_seq, e.place_name, b.checkin_date, a.review_content, a.review_date, e.place_seq, a.review_star, d.roomtype_name,
	        ROW_NUMBER() OVER (ORDER BY b.checkin_date DESC, a.review_date DESC) AS rnum
	    from yonolja_review a, yonolja_book b, yonolja_room c, yonolja_roomtype d, yonolja_place e
	    where a.book_seq=  b.book_seq
		  and b.room_seq = c.room_seq
		  and c.roomtype_seq = d.roomtype_seq
		  and d.place_seq = e.place_seq
	      and b.user_seq = #{param1}
	          ) where rnum BETWEEN #{param2} and #{param2} + #{param3} - 1
	
	    ]]>
	</select>
	<select id="myreview_count" resultType="java.lang.Integer">
	        SELECT COUNT(*) 
	        FROM yonolja_review a, yonolja_book b 
	        WHERE a.book_seq = b.book_seq
	          AND user_seq = #{param1}
	</select>
	
	
	<!-- 나의후기에서 리뷰 수정(업데이트)하기 -->
	<update id="myreview_update">
		update yonolja_review set review_content = #{param2}, review_star = #{param3}
		where review_seq = #{param1}
	</update>
	
	<!-- 나의후기에서 리뷰 삭제하기 -->
	<delete id="myReview_delete">
		delete from yonolja_review where review_seq = #{param1}
	</delete>
	
	
</mapper>

